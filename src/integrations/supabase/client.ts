// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://frkqhvdsrjuxgcfjbtsp.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZya3FodmRzcmp1eGdjZmpidHNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM4Mjg2NjUsImV4cCI6MjA2OTQwNDY2NX0.SlEZUyfyvPWfFT3fLIT_BljVtHkD1W0TYtvsJn17aR8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Detectar iOS para configurações específicas
const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);
const isIOSSafari = isIOS && /Safari/.test(navigator.userAgent) && !/Chrome|CriOS|FxiOS/.test(navigator.userAgent);

// Storage híbrido para iOS - usa localStorage como primário e sessionStorage como backup
const createHybridStorage = () => {
  if (!isIOS) return localStorage;
  
  return {
    getItem: (key: string) => {
      try {
        return localStorage.getItem(key) || sessionStorage.getItem(key);
      } catch {
        return sessionStorage.getItem(key);
      }
    },
    setItem: (key: string, value: string) => {
      try {
        localStorage.setItem(key, value);
        sessionStorage.setItem(key, value); // Backup no sessionStorage
      } catch {
        sessionStorage.setItem(key, value);
      }
    },
    removeItem: (key: string) => {
      try {
        localStorage.removeItem(key);
        sessionStorage.removeItem(key);
      } catch {
        sessionStorage.removeItem(key);
      }
    }
  };
};

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    // Storage híbrido para iOS, localStorage padrão para outros
    storage: createHybridStorage(),
    persistSession: true,
    // HABILITAR autoRefreshToken para iOS - isso é crítico
    autoRefreshToken: true,
    detectSessionInUrl: true,
    // Configurações específicas para iOS
    ...(isIOSSafari && {
      debug: false, // Desabilitar debug no iOS para performance
      storageKey: 'sb-auth-token-ios', // Chave específica para iOS
    }),
  },
  global: {
    headers: {
      'X-Client-Info': 'reservas-hostinger@1.0.0',
      // Header específico para iOS Safari
      ...(isIOSSafari && {
        'X-iOS-Safari': 'true',
      }),
    },
  },
  db: {
    schema: 'public',
  },
  realtime: {
    params: {
      // Reduzir eventos em tempo real para iOS Safari
      eventsPerSecond: isIOSSafari ? 1 : 2,
    },
  },
});